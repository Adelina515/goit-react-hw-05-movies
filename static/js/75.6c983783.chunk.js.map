{"version":3,"file":"static/js/75.6c983783.chunk.js","mappings":"mKAoBA,IAjBkB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAMG,KAAI,SAAAC,GAAI,OACb,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAAlD,SACGG,EAAKK,SAFDL,EAAKE,GADD,KASpB,C,sFCkBD,UA7Ba,WACX,OAA8BI,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAENH,GAAW,IACXI,EAAAA,EAAAA,MACGC,MAAK,SAAAjB,GACJc,EAAad,EACd,IACAkB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPV,GAAW,EACZ,GAGN,GAAE,KAED,iCACE,wBAAI,oBACJ,SAAC,IAAD,CAAWZ,MAAOa,IACjBF,IAAW,SAAC,IAAD,MAGjB,C,+LC9BKY,EAAW,gCACXC,EAAU,mCAEHR,EAAW,mCAAG,oGACFS,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBC,IAFlB,cACnBE,EADmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOXC,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcC,EADd,4DACyEM,IAFjE,cACzBJ,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOjBG,EAAkB,mCAAG,WAAMC,GAAN,uFACTP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDS,EADC,oBACuBR,EADvB,oBADS,cAC1BE,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBM,EAAkB,mCAAG,WAAMD,GAAN,uFACTP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDS,EADC,4BAC+BR,EAD/B,oBADS,cAC1BE,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBO,EAAkB,mCAAG,WAAMF,GAAN,uFACTP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDS,EADC,4BAC+BR,EAD/B,2BADS,cAC1BE,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,qD","sources":["components/ListFilms/ListFilms.js","pages/Home/Home.js","services/ApiAxios.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ListFilms = ({ films }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {films.map(film => (\n        <li key={film.id}>\n          <NavLink to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\nListFilms.propTypes = {\n  films: PropTypes.array.isRequired,\n};\nexport default ListFilms;\n","import Loader from 'components/loader/Loader';\nimport ListFilms from 'components/ListFilms/ListFilms';\nimport React, { useEffect, useState } from 'react';\nimport { fetchMovies } from 'services/ApiAxios';\n\nconst Home = () => {\n  const [loading, setLoading] = useState(false);\n  const [listFilms, setListFilms] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendMovies = () => {\n      setLoading(true);\n      fetchMovies()\n        .then(films => {\n          setListFilms(films);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n    fetchTrendMovies();\n  }, []);\n  return (\n    <>\n      <h2>Trending today</h2>\n      <ListFilms films={listFilms} />\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '898d34a3bae694ae66d81df7ebc9a78d';\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async searchWord => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&include_adult=false&language=en-US&page=1&query=${searchWord}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMoviesDetails = async searchWordId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${searchWordId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesCredits = async searchWordId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${searchWordId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesReviews = async searchWordId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${searchWordId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["films","location","useLocation","map","film","to","id","state","from","title","useState","loading","setLoading","listFilms","setListFilms","useEffect","fetchMovies","then","catch","error","console","log","finally","BASE_URL","API_KEY","axios","response","data","results","fetchSearchMovies","searchWord","fetchMoviesDetails","searchWordId","fetchMoviesCredits","fetchMoviesReviews"],"sourceRoot":""}