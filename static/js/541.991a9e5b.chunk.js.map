{"version":3,"file":"static/js/541.991a9e5b.chunk.js","mappings":"uMAiDA,UA5Ca,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXE,EAAAA,EAAAA,IAAmBL,GAChBM,MAAK,gBAAGR,EAAH,EAAGA,KAAH,OAAcC,EAAQD,EAAtB,IACLS,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQR,GAAW,GAIzB,GAAE,CAACH,IACJS,QAAQC,IAAIZ,IAEV,2BACGI,IAAW,SAAC,IAAD,IACK,IAAhBJ,EAAKc,SAAgB,uBAAG,8BAA+B,KACxD,0BACG,IACAd,EAAKc,OAAS,GACbd,EAAKe,KAAI,SAAAC,GAAI,OACX,2BACE,gBACEC,MAAM,SACNC,IAAKF,EAAKG,KACVC,IACEJ,EAAKK,aAAL,yCACsCL,EAAKK,cACvC,sFAGR,yBAAG,UAAQL,EAAKG,SAChB,yBAAG,cAAYH,EAAKM,eAXbN,EAAKO,GADH,IAcT,SAIb,C,+LC7CKC,EAAW,gCACXC,EAAU,mCAEHC,EAAW,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFlB,cACnBG,EADmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOXC,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,4DACyEO,IAFjE,cACzBJ,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOjBG,EAAkB,mCAAG,WAAMC,GAAN,uFACTP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,oBACuBT,EADvB,oBADS,cAC1BG,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBtB,EAAkB,mCAAG,WAAM2B,GAAN,uFACTP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BAC+BT,EAD/B,oBADS,cAC1BG,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBM,EAAkB,mCAAG,WAAMD,GAAN,uFACTP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BAC+BT,EAD/B,2BADS,cAC1BG,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,qD","sources":["components/Cast/Cast.js","services/ApiAxios.js"],"sourcesContent":["import Loader from 'components/loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesCredits } from 'services/ApiAxios';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCasts = () => {\n      setLoading(true);\n      fetchMoviesCredits(movieId)\n        .then(({ cast }) => setCast(cast))\n        .catch(error => console.log(error))\n        .finally(setLoading(false));\n    };\n\n    fetchCasts();\n  }, [movieId]);\n  console.log(cast);\n  return (\n    <div>\n      {loading && <Loader />}\n      {cast.length === 0 && <p>Sorry cast list not found</p>}{' '}\n      <ul>\n        {' '}\n        {cast.length > 0 &&\n          cast.map(item => (\n            <li key={item.id}>\n              <img\n                width=\" 200px\"\n                alt={item.name}\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/w200${item.profile_path}`\n                    : 'https://cdn2.vectorstock.com/i/1000x1000/95/06/no-people-sign-vector-9019506.jpg'\n                }\n              />\n              <p> name: {item.name}</p>\n              <p>character: {item.character}</p>\n            </li>\n          ))}{' '}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '898d34a3bae694ae66d81df7ebc9a78d';\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async searchWord => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&include_adult=false&language=en-US&page=1&query=${searchWord}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMoviesDetails = async searchWordId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${searchWordId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesCredits = async searchWordId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${searchWordId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesReviews = async searchWordId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${searchWordId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["useState","cast","setCast","movieId","useParams","loading","setLoading","useEffect","fetchMoviesCredits","then","catch","error","console","log","finally","length","map","item","width","alt","name","src","profile_path","character","id","BASE_URL","API_KEY","fetchMovies","axios","response","data","results","fetchSearchMovies","searchWord","fetchMoviesDetails","searchWordId","fetchMoviesReviews"],"sourceRoot":""}