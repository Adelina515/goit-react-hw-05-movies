{"version":3,"file":"static/js/785.6ab239c0.chunk.js","mappings":"uMAqCA,UAhCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXE,EAAAA,EAAAA,IAAmBR,GAChBS,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBN,EAAWM,EAA5B,IACLC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQT,GAAW,GAGzB,GAAE,CAACN,KAEF,2BACGK,IAAW,SAAC,IAAD,IACQ,IAAnBF,EAAQa,SAAgB,uBAAG,0CAC5B,wBACGb,EAAQa,OAAS,GAChBb,EAAQc,KAAI,SAAAC,GAAM,OAChB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAHG,QAS3B,C,+LCjCKC,EAAW,gCACXC,EAAU,mCAEHC,EAAW,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFlB,cACnBG,EADmB,yBAIlBA,EAASC,KAAKhB,SAJI,2CAAH,qDAOXiB,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,4DACyEM,IAFjE,cACzBH,EADyB,yBAIxBA,EAASC,KAAKhB,SAJU,2CAAH,sDAOjBmB,EAAkB,mCAAG,WAAMC,GAAN,uFACTN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,oBACuBR,EADvB,oBADS,cAC1BG,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBK,EAAkB,mCAAG,WAAMD,GAAN,uFACTN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,4BAC+BR,EAD/B,oBADS,cAC1BG,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBlB,EAAkB,mCAAG,WAAMsB,GAAN,uFACTN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,4BAC+BR,EAD/B,2BADS,cAC1BG,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,qD","sources":["components/Reviews/Reviews.js","services/ApiAxios.js"],"sourcesContent":["import Loader from 'components/loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'services/ApiAxios';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReviews = () => {\n      setLoading(true);\n      fetchMoviesReviews(movieId)\n        .then(({ results }) => setReviews(results))\n        .catch(error => console.log(error))\n        .finally(setLoading(false));\n    };\n    fetchReviews();\n  }, [movieId]);\n  return (\n    <div>\n      {loading && <Loader />}\n      {reviews.length === 0 && <p>Sorry haven't reviews for this movie</p>}\n      <ul>\n        {reviews.length > 0 &&\n          reviews.map(review => (\n            <li>\n              <h3>{review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '898d34a3bae694ae66d81df7ebc9a78d';\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async searchWord => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&include_adult=false&language=en-US&page=1&query=${searchWord}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMoviesDetails = async searchWordId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${searchWordId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesCredits = async searchWordId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${searchWordId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesReviews = async searchWordId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${searchWordId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","fetchMoviesReviews","then","results","catch","error","console","log","finally","length","map","review","author","content","BASE_URL","API_KEY","fetchMovies","axios","response","data","fetchSearchMovies","searchWord","fetchMoviesDetails","searchWordId","fetchMoviesCredits"],"sourceRoot":""}